<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>binary on stardustman</title><link>http://stardustman.github.io/tags/binary/</link><description>Recent content in binary on stardustman</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 22 May 2022 16:26:36 +0800</lastBuildDate><atom:link href="http://stardustman.github.io/tags/binary/index.xml" rel="self" type="application/rss+xml"/><item><title>Virtual Memory Address Explore</title><link>http://stardustman.github.io/2022/05/22/virtual-memory-address-explore/</link><pubDate>Sun, 22 May 2022 16:26:36 +0800</pubDate><guid>http://stardustman.github.io/2022/05/22/virtual-memory-address-explore/</guid><description>virtual memory address space layout 代码测试 cargo new vas-explore main.rs use std::{thread,time}; fn main() { println!(&amp;quot;Hello, world!&amp;quot;); let sl = time::Duration::from_millis(10000000); thread::sleep(sl); println!(&amp;quot;Goodbye, world!&amp;quot;); } cargo build ./target/debug/vas-explore pidof vas-explore /proc/pid/maps stardust@os:x86_64-linux-gnu$ pidof vas-explore 75599 stardust@os:x86_64-linux-gnu$ cat /proc/75599/maps 556a8a831000-556a8a837000 r--p 00000000 08:12 815699 /home/stardust/Desktop/rust/vas-explore/target/debug/vas-explore 556a8a837000-556a8a86e000 r-xp 00006000 08:12 815699 /home/stardust/Desktop/rust/ vas-explore/target/debug/vas-explore # text(code segment) segment 556a8a86e000-556a8a87c000 r--p 0003d000 08:12 815699 /home/stardust/Desktop/rust/vas-explore/target/debug/vas-explore 556a8a87d000-556a8a880000 r--p 0004b000 08:12 815699 /home/stardust/Desktop/rust/vas-explore/target/debug/vas-explore</description></item></channel></rss>